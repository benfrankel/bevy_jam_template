# Add the contents of this file to `config.toml` to enable "fast build" configuration. Please read the notes below.

# NOTE: For maximum performance, build using a nightly compiler
# If you are using rust stable, remove the "-Zshare-generics=y" below.

[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-Clink-arg=-fuse-ld=mold", "-Zshare-generics=y"]

# NOTE: you must manually install https://github.com/michaeleisel/zld on mac. you can easily do this with the "brew" package manager:
# `brew install michaeleisel/zld/zld`
[target.x86_64-apple-darwin]
rustflags = [
    #"-C",
    #"link-arg=-fuse-ld=/usr/local/bin/zld",
    "-Zshare-generics=y",
]

[target.aarch64-apple-darwin]
rustflags = [
    #"-C",
    #"link-arg=-fuse-ld=/opt/homebrew/bin/zld",
    "-Zshare-generics=y",
]

[target.x86_64-pc-windows-msvc]
linker = "rust-lld.exe"
rustflags = ["-Zshare-generics=n"]

# Optional: Uncommenting the following improves compile times, but reduces the amount of debug info to 'line number tables only'
# In most cases the gains are negligible, but if you are on macos and have slow compile times you should see significant gains.
#[profile.dev]
#debug = 1

[registries.crates-io]
protocol = "sparse"

[profile.dev]
opt-level = 1
#debug = true
#split-debuginfo = '...'  # Platform-specific.
#debug-assertions = true
#overflow-checks = true
#lto = false
#panic = 'unwind'
#incremental = true
#codegen-units = 256
#rpath = false

[profile.dev.package."*"]
opt-level = 3

[profile.release]
#opt-level = 3
#debug = false
#split-debuginfo = '...'  # Platform-specific.
#debug-assertions = false
#overflow-checks = false
lto = "thin"
#panic = 'unwind'
#incremental = false
codegen-units = 1
#rpath = false

[profile.wasm-release]
inherits = "release"
opt-level = "z"
strip = "debuginfo"
