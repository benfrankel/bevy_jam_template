name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Strip unnecessary information from build artifacts to reduce cache size.
  RUSTFLAGS: --deny warnings -C incremental=no -C debuginfo=line-tables-only
  RUSTDOCFLAGS: --deny warnings
  LINTER_TOOLCHAIN: nightly-2025-04-03

jobs:
  # Check formatting.
  format:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  # Run Clippy lints.
  clippy:
    name: Clippy lints
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - name: Restore Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Run Clippy lints
        run: cargo clippy --locked --workspace --all-targets --all-features

  # Run Bevy lints.
  bevy-lint:
    name: Bevy lints
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - name: Restore Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install bevy_lint
        uses: TheBevyFlock/bevy_cli/bevy_lint@lint-v0.3.0

      - name: Run Bevy lints
        run: bevy_lint --locked --workspace --all-targets --all-features
